<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="51.327" tests="33" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk1.8.0_131\jre\bin"/>
    <property name="java.vm.version" value="25.131-b11"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=";"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.script" value=""/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="C:\Users\Sam Benton&apos;s PC\Documents\GitHub\Pitest-Augmentation-Project"/>
    <property name="java.runtime.version" value="1.8.0_131-b11"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="C:\Program Files\Java\jdk1.8.0_131\jre\lib\endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="C:\Users\SAMBEN~1\AppData\Local\Temp\"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="user.variant" value=""/>
    <property name="os.name" value="Windows 10"/>
    <property name="maven.ext.class.path" value="C:\Program Files\NetBeans 8.0.2\java\maven-nblib\netbeans-eventspy.jar"/>
    <property name="classworlds.conf" value="C:\Program Files\NetBeans 8.0.2\java\maven\bin\m2.conf"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\dotnet\;C:\Program Files (x86)\Xoreax\IncrediBuild;C:\Program Files\Git\cmd;C:\Program Files (x86)\Java\jdk1.8.0_131\bin;C:\Users\Sam Benton&apos;s PC\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;."/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.0"/>
    <property name="user.home" value="C:\Users\Sam Benton&apos;s PC"/>
    <property name="user.timezone" value="America/Chicago"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="Sam Benton&apos;s PC"/>
    <property name="java.class.path" value="C:\Program Files\NetBeans 8.0.2\java\maven\boot\plexus-classworlds-2.4.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="C:\Program Files\Java\jdk1.8.0_131\jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher -Dmaven.ext.class.path=C:\Program Files\NetBeans 8.0.2\java\maven-nblib\netbeans-eventspy.jar -Dfile.encoding=UTF-8 install"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_131"/>
    <property name="java.ext.dirs" value="C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext;C:\Windows\Sun\Java\lib\ext"/>
    <property name="sun.boot.class.path" value="C:\Program Files\Java\jdk1.8.0_131\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_131\jre\classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="C:\Program Files\NetBeans 8.0.2\java\maven"/>
    <property name="file.separator" value="\"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.desktop" value="windows"/>
    <property name="sun.cpu.isalist" value="amd64"/>
  </properties>
  <testcase name="shouldLoadResoucesOffClassPathFromFolderWithSpaces" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="2.652"/>
  <testcase name="shouldFailRunWithHelpfulMessageIfTestsNotGreen" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="1.135"/>
  <testcase name="shouldMarkChildJVMCrashesAsRunErrors" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="1.957"/>
  <testcase name="shouldKillMutationsWhenMutationsPreventsConstructionOfTestClass" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="1.896"/>
  <testcase name="shouldNotMutateMethodsMatchingExclusionPredicate" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="1.159"/>
  <testcase name="shouldCombineAndKillInlinedMutationsInFinallyBlocks" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="1.999"/>
  <testcase name="shouldWorkWithEasyMock" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="2.143"/>
  <testcase name="shouldExcludeFilteredTests" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="0.925"/>
  <testcase name="shouldNotCreateMutationsInStaticInitializersWhenFlagNotSet" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="1.147"/>
  <testcase name="shouldKillMutationsWhenKillingTestClassContainsAnIgnoreOnAnotherMethod" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="1.835"/>
  <testcase name="shouldNotMutateClassesAnnotatedWithGenerated" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="0.847"/>
  <testcase name="shouldExitAfterFirstFailureWhenTestClassAnnotatedWithBeforeClass" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="1.783"/>
  <testcase name="shouldTerminateWhenThreadpoolCreated" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="1.627"/>
  <testcase name="shouldReportSurvivingMutations" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="1.688"/>
  <testcase name="willMutateStaticMethodsCalledFromInitializerAndElsewhere" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="0.73"/>
  <testcase name="shouldPickRelevantTestsFromSuppliedTestSuites" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="1.807"/>
  <testcase name="shouldKillMutationsInStaticInitializersWhenThereIsCoverageAndMutateStaticFlagIsSet" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="2.078"/>
  <testcase name="willAllowExcludedClassesToBeReIncludedViaSuite" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="1.793"/>
  <testcase name="shouldReportCombinedCoveredButNotTestedMutationsInFinallyBlocksAsSurvived" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="1.71"/>
  <testcase name="willMutatePriveMethodsCalledInChainFromInitializer" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="0.725"/>
  <testcase name="shouldOnlyRunTestsMathchingSuppliedFilter" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="1.989"/>
  <testcase name="shouldPickRelevantTestsAndKillMutationsBasedOnCoverageDataWhenLimitedByClassReach" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="1.803"/>
  <testcase name="shouldUseTestsDefinedInASuppliedJUnitThreeSuite" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="1.73"/>
  <testcase name="shouldMutateClassesSuppliedToAlternateClassPath" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="1.669"/>
  <testcase name="shouldReportUnCoveredMutations" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="1.765"/>
  <testcase name="shouldMutateNonPrivateStaticMethodsCalledFromInitializerOnly" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="0.717"/>
  <testcase name="shouldNotMutateStaticMethodsOnlyCalledFromInitializer" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="0.756"/>
  <testcase name="shouldLimitNumberOfMutationsPerClass" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="0.991"/>
  <testcase name="shouldReportHelpfulErrorIfNoMutationsFounds" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="0.722"/>
  <testcase name="shouldPickRelevantTestsAndKillMutationsBasedOnCoverageData" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="1.854"/>
  <testcase name="shouldExcludeFilteredClasses" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="0.726"/>
  <testcase name="shouldWorkWithMockitoJUnitRunner" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="2.205"/>
  <testcase name="shouldSupportTestNG" classname="org.pitest.mutationtest.MutationCoverageReportSystemTest" time="2.764"/>
</testsuite>